# Where is the schema defined?
schema:
  - schemas/*.graphql

# Where does the generated boilerplate code go?
exec:
  layout: follow-schema
  dir: generated
  package: generated

# Where should the generated models go?
model:
  filename: modelv2/types.go
  package: modelv2

# Where are the resolvers situated?
resolver:
  layout: follow-schema
  dir: resolvers
  package: resolvers

# Use these existing types instead of generating
autobind:
# currently empty

# Map between GraphQL types and Go types
#
# First line is used as default for resolver arguments, the next ones will be
# allowed when binding to fields. Implicit casts are generated.
#
# We add mapping for `Int` to support multiple integral types
models:
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int32
      - github.com/99designs/gqlgen/graphql.Int64
  Package:
    fields:
      namespaces:
        resolver: true
