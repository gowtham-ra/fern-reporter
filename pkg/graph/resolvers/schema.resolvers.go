package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"
	"github.com/guidewire/fern-reporter/pkg/db"
	"github.com/guidewire/fern-reporter/pkg/graph/generated"
	"github.com/guidewire/fern-reporter/pkg/graph/modelv2"
)

// TestRuns is the resolver for the testRuns field.
func (r *queryResolver) TestRuns(ctx context.Context) ([]*modelv2.TestRun, error) {
	var testRuns []*modelv2.TestRun
	r.DB.Find(&testRuns)
	return testRuns, nil
}

// TestRun is the resolver for the testRun field.
func (r *queryResolver) TestRun(ctx context.Context, testRunFilter modelv2.TestRunFilter) ([]*modelv2.TestRun, error) {
	var testRuns []*modelv2.TestRun
	db.GetDb().Preload("SuiteRuns.SpecRuns").Where("id = ?", testRunFilter.ID).Where("test_project_name = ?", testRunFilter.TestProjectName).Find(&testRuns)
	return testRuns, nil
}

// TestRunByID is the resolver for the testRunById field.
func (r *queryResolver) TestRunByID(ctx context.Context, id int) (*modelv2.TestRun, error) {
	var testRun *modelv2.TestRun
	db.GetDb().Preload("SuiteRuns.SpecRuns").Where("id = ?", id).First(&testRun)
	return testRun, nil

}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
